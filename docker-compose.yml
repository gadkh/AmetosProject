version: '3.8'

services:
  ingestion_db:
    image: postgres:13
    container_name: ingestion_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: iot_db
    ports:
      - "5432:5432"
    volumes:
      - ingestion_db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d iot_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  alerting_db:
    image: postgres:13
    container_name: alerting_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: alert_db
    ports:
      - "5433:5432"
    volumes:
      - alerting_db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d alert_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ingestion_redis:
    image: redis:latest
    container_name: ingestion_redis
    ports:
      - "6379:6379"
    volumes:
      - ingestion_redis_data:/data
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  alerting_redis:
    image: redis:latest
    container_name: alerting_redis
    ports:
      - "6380:6379"
    volumes:
      - alerting_redis_data:/data
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq_container
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ingestion_service:
    build: ./Ametos_ingestion_service
    container_name: ingestion_service
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      ingestion_db:
        condition: service_healthy
      ingestion_redis:
        condition: service_healthy
    environment:
      RUNNING_IN_DOCKER: True
      REDIS_HOST: ingestion_redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      DATABASE_URL: postgresql://user:password@ingestion_db:5432/iot_db
      REDIS_URL: redis://ingestion_redis:6379/0
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    ports:
      - "8000:8000"
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload" ]

  alerting_service:
      build: ./Ametos_alerting_serivce
      container_name: alerting_service
      restart: always
      depends_on:
        rabbitmq:
          condition: service_healthy
        alerting_db:
          condition: service_healthy
        alerting_redis:
          condition: service_healthy
      environment:
        RUNNING_IN_DOCKER: True
        DATABASE_URL: postgresql://user:password@alerting_db:5432/alert_db
        REDIS_URL: redis://alerting_redis:6379/0
        RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
        REDIS_HOST: alerting_redis
        REDIS_PORT: 6379
        REDIS_DB: 0
      ports:
        - "8001:8000"
      command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  celery_worker:
    build: ./Ametos_alerting_serivce
    container_name: celery_worker
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      alerting_db:
        condition: service_healthy
      alerting_redis:
        condition: service_healthy
    environment:
      RUNNING_IN_DOCKER: True
      DATABASE_URL: postgresql://user:password@alerting_db:5432/alert_db
      REDIS_URL: redis://alerting_redis:6379/0
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      REDIS_HOST: alerting_redis
      REDIS_PORT: 6379
      REDIS_DB: 0
    command: ["celery", "-A", "app.workers.alert_worker", "worker", "--loglevel=info", "--queues=events"]


volumes:
  ingestion_db_data:
  ingestion_redis_data:
  alerting_db_data:
  alerting_redis_data:
